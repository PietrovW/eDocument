// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Notifikation.Infrastructure.Context;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

namespace Notifikation.Infrastructure.Migrations
{
    [DbContext(typeof(NotifikationContext))]
    partial class NotifikationContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .UseIdentityByDefaultColumns()
                .HasAnnotation("Relational:MaxIdentifierLength", 63)
                .HasAnnotation("ProductVersion", "5.0.0");

            modelBuilder.Entity("Notifikation.Infrastructure.Entity.AttachmentEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<byte[]>("Content")
                        .IsRequired()
                        .HasColumnType("bytea");

                    b.HasKey("Id");

                    b.ToTable("Attachments", "Notifikation");
                });

            modelBuilder.Entity("Notifikation.Infrastructure.Entity.NotifikationEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Message")
                        .HasColumnType("text");

                    b.Property<long?>("UserId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.HasIndex("UserId");

                    b.ToTable("Notifikations", "Notifikation");
                });

            modelBuilder.Entity("Notifikation.Infrastructure.Entity.UserEntity", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .UseIdentityByDefaultColumn();

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Users", "Notifikation");
                });

            modelBuilder.Entity("Notifikation.Infrastructure.Entity.NotifikationEntity", b =>
                {
                    b.HasOne("Notifikation.Infrastructure.Entity.UserEntity", "User")
                        .WithMany("Notifikations")
                        .HasForeignKey("UserId");

                    b.Navigation("User");
                });

            modelBuilder.Entity("Notifikation.Infrastructure.Entity.UserEntity", b =>
                {
                    b.Navigation("Notifikations");
                });
#pragma warning restore 612, 618
        }
    }
}
